import{r as $,_ as C}from"./zZXv9NDt.js";import{u as b,g as r}from"./HsAOjbzS.js";import{u as k}from"./BK9K1Gr-.js";import{_ as B,v as A,x as l,f as G,y as n,l as U,g as j,o,c as i,a as w,C as y,E as v,d as z,t as F,L as N,F as _,B as E,G as h,k as L,w as T}from"./Cp_qYibV.js";import"./5hD3p8xk.js";const D={wrapper:"relative flex items-start",fieldset:"",legend:"text-sm font-medium text-gray-700 dark:text-gray-200 mb-1",default:{color:"primary"}},d=A(l.ui.strategy,l.ui.radioGroup,D),I=A(l.ui.strategy,l.ui.radio,$),P=G({components:{URadio:C},inheritAttrs:!1,props:{modelValue:{type:[String,Number,Object],default:""},name:{type:String,default:null},legend:{type:String,default:null},options:{type:Array,default:()=>[]},optionAttribute:{type:String,default:"label"},valueAttribute:{type:String,default:"value"},disabled:{type:Boolean,default:!1},color:{type:String,default:()=>d.default.color,validator(e){return l.ui.colors.includes(e)}},class:{type:[String,Object,Array],default:()=>""},ui:{type:Object,default:()=>({})},uiRadio:{type:Object,default:()=>({})}},emits:["update:modelValue","change"],setup(e,{emit:s}){const{ui:m,attrs:c}=b("radioGroup",n(e,"ui"),d,n(e,"class")),{ui:f}=b("radio",n(e,"uiRadio"),I),{emitFormChange:g,color:u,name:t}=k(e,d);U("radio-group",{color:u,name:t});const p=a=>{s("update:modelValue",a),s("change",a),g()},O=a=>r(a,e.valueAttribute,r(a,e.optionAttribute)),R=a=>r(a,e.optionAttribute,r(a,e.valueAttribute)),S=a=>["string","number","boolean"].includes(typeof a)?{value:a,label:a}:{...a,value:O(a),label:R(a)},V=j(()=>e.options.map(a=>S(a)));return{ui:m,uiRadio:f,attrs:c,normalizedOptions:V,onUpdate:p}}});function q(e,s,m,c,f,g){const u=C;return o(),i("div",{class:y(e.ui.wrapper)},[w("fieldset",h(e.attrs,{class:e.ui.fieldset}),[e.legend||e.$slots.legend?(o(),i("legend",{key:0,class:y(e.ui.legend)},[v(e.$slots,"legend",{},()=>[z(F(e.legend),1)])],2)):N("",!0),(o(!0),i(_,null,E(e.normalizedOptions,t=>(o(),L(u,{key:t.value,label:t.label,"model-value":e.modelValue,value:t.value,help:t.help,disabled:t.disabled||e.disabled,ui:e.uiRadio,onChange:p=>e.onUpdate(t.value)},{label:T(()=>[v(e.$slots,"label",h({ref_for:!0},{option:t}))]),_:2},1032,["label","model-value","value","help","disabled","ui","onChange"]))),128))],16)],2)}const W=B(P,[["render",q]]);export{W as default};
