import{_ as V,s as N,v as f,g as $,x as B,r as z,Q as q,l as C,X as A,P as F,h as H,J as R,o as D,c as E,a as G,G as J,E as P,A as U,U as Q}from"./entry.Jvo4eJKd.js";import{t as X}from"./tw-merge.N9fLOATJ.js";import{t as x,u as K}from"./selectMenu.TIhLO2gh.js";import{u as L}from"./useFormGroup.V5rnC8dT.js";import"./uid.RBzw2_Kg.js";import"./index.C5psP8J1.js";const o=N(f.ui.strategy,f.ui.textarea,x),W=$({inheritAttrs:!1,props:{modelValue:{type:[String,Number],default:""},id:{type:String,default:null},name:{type:String,default:null},placeholder:{type:String,default:null},required:{type:Boolean,default:!1},disabled:{type:Boolean,default:!1},rows:{type:Number,default:3},autoresize:{type:Boolean,default:!1},autofocus:{type:Boolean,default:!1},autofocusDelay:{type:Number,default:100},resize:{type:Boolean,default:!1},padded:{type:Boolean,default:!0},size:{type:String,default:null,validator(e){return Object.keys(o.size).includes(e)}},color:{type:String,default:()=>o.default.color,validator(e){return[...f.ui.colors,...Object.keys(o.color)].includes(e)}},variant:{type:String,default:()=>o.default.variant,validator(e){return[...Object.keys(o.variant),...Object.values(o.color).flatMap(t=>Object.keys(t))].includes(e)}},textareaClass:{type:String,default:null},class:{type:[String,Object,Array],default:()=>""},ui:{type:Object,default:()=>({})},modelModifiers:{type:Object,default:()=>({})}},emits:["update:modelValue","blur"],setup(e,{emit:t}){const{ui:l,attrs:m}=K("textarea",B(e,"ui"),o,B(e,"class")),{emitFormBlur:p,emitFormInput:c,inputId:r,color:v,size:g,name:I}=L(e,o),n=z(q({},e.modelModifiers,{trim:!1,lazy:!1,number:!1})),u=z(null),y=()=>{var a;e.autofocus&&((a=u.value)==null||a.focus())},d=()=>{if(e.autoresize){if(!u.value)return;u.value.rows=e.rows;const a=window.getComputedStyle(u.value),s=parseInt(a.paddingTop),i=parseInt(a.paddingBottom),k=s+i,T=parseInt(a.lineHeight),{scrollHeight:M}=u.value,w=(M-k)/T;w>e.rows&&(u.value.rows=w)}},b=a=>{n.value.trim&&(a=a.trim()),n.value.number&&(a=Q(a)),t("update:modelValue",a),c()},h=a=>{d(),n.value.lazy||b(a.target.value)},S=a=>{const s=a.target.value;n.value.lazy&&b(s),n.value.trim&&(a.target.value=s.trim())},j=a=>{t("blur",a),p()};C(()=>{setTimeout(()=>{y()},e.autofocusDelay)}),A(()=>e.modelValue,()=>{F(d)}),C(()=>{setTimeout(()=>{y(),d()},100)});const O=H(()=>{var s,i;const a=((i=(s=l.value.color)==null?void 0:s[v.value])==null?void 0:i[e.variant])||l.value.variant[e.variant];return X(R(l.value.base,l.value.form,l.value.rounded,l.value.placeholder,l.value.size[g.value],e.padded?l.value.padding[g.value]:"p-0",a==null?void 0:a.replaceAll("{color}",v.value),!e.resize&&"resize-none"),e.textareaClass)});return{ui:l,attrs:m,name:I,inputId:r,textarea:u,textareaClass:O,onInput:h,onChange:S,onBlur:j}}}),Y=["id","value","name","rows","required","disabled","placeholder"];function Z(e,t,l,m,p,c){return D(),E("div",{class:U(e.ui.wrapper)},[G("textarea",J({id:e.inputId,ref:"textarea",value:e.modelValue,name:e.name,rows:e.rows,required:e.required,disabled:e.disabled,placeholder:e.placeholder,class:e.textareaClass},e.attrs,{onInput:t[0]||(t[0]=(...r)=>e.onInput&&e.onInput(...r)),onBlur:t[1]||(t[1]=(...r)=>e.onBlur&&e.onBlur(...r)),onChange:t[2]||(t[2]=(...r)=>e.onChange&&e.onChange(...r))}),null,16,Y),P(e.$slots,"default")],2)}const re=V(W,[["render",Z]]);export{re as default};
